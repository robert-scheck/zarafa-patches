Patch by Robert Scheck <robert@fedoraproject.org> for Zarafa <= 7.1.9 which fixes a really
broken logic: Setting "ssl_enable_v2 = yes" enables SSLv2 up to TLSv1.0 (or even TLSv1.2;
depends on OpenSSL version). However setting "ssl_enable_v2 = no" enables SSLv3 only. This
patch only disables SSLv2 if "ssl_enable_v2 = no" is set but still allows SSLv3 to TLSv1.2.

Testing suggestions:
1. Set "ssl_enable_v2 = no" in gateway.cfg and ical.cfg
2. echo QUIT | openssl s_client -ssl2 -connect <host>:110 -starttls pop3 2>&1  # Must fail
3. echo QUIT | openssl s_client -ssl2 -connect <host>:143 -starttls imap 2>&1  # Must fail
4. echo QUIT | openssl s_client -ssl2 -connect <host>:993 2>&1                 # Must fail
5. echo QUIT | openssl s_client -ssl2 -connect <host>:995 2>&1                 # Must fail
6. echo QUIT | openssl s_client -ssl2 -connect <host>:8443 2>&1                # Must fail
7. Set "ssl_enable_v2 = yes" in gateway.cfg and ical.cfg
8. echo QUIT | openssl s_client -ssl2 -connect <host>:110 -starttls pop3 2>&1  # Succeeds
9. echo QUIT | openssl s_client -ssl2 -connect <host>:143 -starttls imap 2>&1  # Succeeds
10. echo QUIT | openssl s_client -ssl2 -connect <host>:993 2>&1                # Succeeds
11. echo QUIT | openssl s_client -ssl2 -connect <host>:995 2>&1                # Succeeds
12. echo QUIT | openssl s_client -ssl2 -connect <host>:8443 2>&1               # Succeeds

The code has been taken from provider/server/ECSoapServerConnection.cpp and thus should be
same error free/prone like at zarafa-server. OpenSSL at some Linux distributions does not
support SSLv2 ciphers anymore as it seems (it is anyway weak and broken). In this case all
tests will always fail. Cross-check using e.g. "openssl ciphers -v | grep SSLv2" before.

This patch is intended for Zarafa 7.1.x only as ZCP-12143 is going to add configurable SSL/
TLS protocols, cipher suites and preferences (submission via Ticket#2014030810000131).

--- zarafa-7.1.9/common/ECChannel.cpp			2014-03-31 13:45:37.000000000 +0200
+++ zarafa-7.1.9/common/ECChannel.cpp.ssl_v23		2014-04-14 00:56:37.000000000 +0200
@@ -105,13 +105,14 @@
 
 	SSL_library_init();
 	SSL_load_error_strings();
-	if (parseBool(lpConfig->GetSetting("ssl_enable_v2", "", "no")))
-		lpCTX = SSL_CTX_new(SSLv23_server_method());
-	else
-		lpCTX = SSL_CTX_new(SSLv3_server_method());
+	lpCTX = SSL_CTX_new(SSLv23_server_method());
 	SSL_CTX_set_options(lpCTX, SSL_OP_ALL);
 	SSL_CTX_set_default_verify_paths(lpCTX);
 
+	// disable SSLv2 support
+	if (!parseBool(lpConfig->GetSetting("ssl_enable_v2", "", "no")))
+		SSL_CTX_set_options(lpCTX, SSL_OP_NO_SSLv2);
+
 	if (SSL_CTX_use_certificate_chain_file(lpCTX, lpConfig->GetSetting("ssl_certificate_file")) != 1) {
 		lpLogger->Log(EC_LOGLEVEL_ERROR, "SSL CTX certificate file error: %s", ERR_error_string(ERR_get_error(), 0));
 		hr = MAPI_E_CALL_FAILED;
