Backport of upstream patch from Git commit 512457466b87039c6a8d25887fdaca6173619546 to fix
remote DoS by memory exhaustion in the zarafa-ical daemon of Zarafa 7.1.14. See also:

 - https://seclists.org/oss-sec/2021/q1/244
 - https://seclists.org/oss-sec/2021/q1/256
 - https://github.com/Kopano-dev/kopano-core/commit/512457466b87039c6a8d25887fdaca6173619546
 - https://bugzilla.redhat.com/show_bug.cgi?id=1942773

Reproducer (replace 'localhost' accordingly): perl -e 'print "GET / HTTP/1.0\nHost: \n"; \
  while(1) { print " " . "A" x 65000 . "\n"; }' | socat - tcp-connect:localhost:8080

--- zarafa-7.1.14/caldav/Http.cpp			2015-10-20 11:13:41.000000000 +0200
+++ zarafa-7.1.14/caldav/Http.cpp.ical-remote-dos	2021-03-24 16:17:51.417866211 +0100
@@ -180,6 +180,8 @@
 	std::string strBuffer;
 	ULONG n = 0;
 	std::map<std::string, std::string>::iterator iHeader = mapHeaders.end();
+	static constexpr std::size_t MAX_HEADER_LENGTH = 65536;
+	std::size_t numOfBytesRead = 0;
 
 	m_lpLogger->Log(EC_LOGLEVEL_DEBUG, "Receiving headers:");
 	do
@@ -191,6 +193,11 @@
 		if (strBuffer.empty())
 			break;
 
+		numOfBytesRead += strBuffer.size();
+		if(numOfBytesRead > MAX_HEADER_LENGTH) {
+			return MAPI_E_TOO_BIG;
+		}
+
 		if (n == 0) {
 			m_strAction = strBuffer;
 		} else {
