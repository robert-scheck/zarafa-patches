Patch by Robert Scheck <robert@fedoraproject.org> for Zarafa >= 7.0.4, which fixes building of the PHP
extension of Zarafa with PHP >= 5.4.0. It is heavily based on the work of Remi Collet. Fedora 17+ will
ship PHP >= 5.4.0, so the changes are here mandatory. According to /usr/include/php/main/php3_compat.h
the "typedef zval pval;" definition exists for ages and I wasn't able to figure out any build issue in
Red Hat Enterprise Linux 5 (as oldest supported version of Zarafa 7.0.x) during my tests. References:

 - https://github.com/remicollet/remirepo/blob/1e741d6002a34add940c15711cf061c35d4c9e91/zarafa/zarafa-7.0.3-php54.patch
 - http://forums.zarafa.com/viewtopic.php?f=22&t=7826

--- zarafa-7.0.4/php-ext/ECImportContentsChangesProxy.cpp		2011-12-22 01:02:33.000000000 +0100
+++ zarafa-7.0.4/php-ext/ECImportContentsChangesProxy.cpp.php54		2012-01-08 23:58:33.000000000 +0100
@@ -150,9 +150,9 @@
 HRESULT ECImportContentsChangesProxy::Config(LPSTREAM lpStream, ULONG ulFlags) {
     HRESULT hr = hrSuccess;
     
-    pval *pvalFuncName;
-    pval *pvalReturn;
-    pval *pvalArgs[2];
+    zval *pvalFuncName;
+    zval *pvalReturn;
+    zval *pvalArgs[2];
     
     MAKE_STD_ZVAL(pvalFuncName);
     MAKE_STD_ZVAL(pvalReturn);
@@ -192,9 +192,9 @@
 HRESULT ECImportContentsChangesProxy::UpdateState(LPSTREAM lpStream) {
     HRESULT hr = hrSuccess;
     
-    pval *pvalFuncName;
-    pval *pvalReturn;
-    pval *pvalArgs[1];
+    zval *pvalFuncName;
+    zval *pvalReturn;
+    zval *pvalArgs[1];
     
     MAKE_STD_ZVAL(pvalFuncName);
     MAKE_STD_ZVAL(pvalReturn);
@@ -228,9 +228,9 @@
 }
 
 HRESULT ECImportContentsChangesProxy::ImportMessageChange(ULONG cValues, LPSPropValue lpPropArray, ULONG ulFlags, LPMESSAGE * lppMessage)  {
-    pval *pvalFuncName;
-    pval *pvalReturn;
-    pval *pvalArgs[3];
+    zval *pvalFuncName;
+    zval *pvalReturn;
+    zval *pvalArgs[3];
     IMessage *lpMessage = NULL;
     HRESULT hr = hrSuccess;
     
@@ -287,9 +287,9 @@
 HRESULT ECImportContentsChangesProxy::ImportMessageDeletion(ULONG ulFlags, LPENTRYLIST lpSourceEntryList) {
     HRESULT hr = hrSuccess;
     
-    pval *pvalFuncName;
-    pval *pvalReturn;
-    pval *pvalArgs[2];
+    zval *pvalFuncName;
+    zval *pvalReturn;
+    zval *pvalArgs[2];
     
     MAKE_STD_ZVAL(pvalFuncName);
     MAKE_STD_ZVAL(pvalReturn);
@@ -323,9 +323,9 @@
 HRESULT ECImportContentsChangesProxy::ImportPerUserReadStateChange(ULONG cElements, LPREADSTATE lpReadState) {
     HRESULT hr = hrSuccess;
     
-    pval *pvalFuncName;
-    pval *pvalReturn;
-    pval *pvalArgs[1];
+    zval *pvalFuncName;
+    zval *pvalReturn;
+    zval *pvalArgs[1];
     
     MAKE_STD_ZVAL(pvalFuncName);
     MAKE_STD_ZVAL(pvalReturn);
--- zarafa-7.0.4/php-ext/ECImportHierarchyChangesProxy.cpp		2011-12-22 01:02:33.000000000 +0100
+++ zarafa-7.0.4/php-ext/ECImportHierarchyChangesProxy.cpp.php54	2012-01-08 23:58:33.000000000 +0100
@@ -147,9 +147,9 @@
 HRESULT ECImportHierarchyChangesProxy::Config(LPSTREAM lpStream, ULONG ulFlags) {
     HRESULT hr = hrSuccess;
     
-    pval *pvalFuncName;
-    pval *pvalReturn;
-    pval *pvalArgs[2];
+    zval *pvalFuncName;
+    zval *pvalReturn;
+    zval *pvalArgs[2];
     
     MAKE_STD_ZVAL(pvalFuncName);
     MAKE_STD_ZVAL(pvalReturn);
@@ -189,9 +189,9 @@
 HRESULT ECImportHierarchyChangesProxy::UpdateState(LPSTREAM lpStream) {
     HRESULT hr = hrSuccess;
     
-    pval *pvalFuncName;
-    pval *pvalReturn;
-    pval *pvalArgs[1];
+    zval *pvalFuncName;
+    zval *pvalReturn;
+    zval *pvalArgs[1];
     
     MAKE_STD_ZVAL(pvalFuncName);
     MAKE_STD_ZVAL(pvalReturn);
@@ -225,9 +225,9 @@
 }
 
 HRESULT ECImportHierarchyChangesProxy::ImportFolderChange(ULONG cValues, LPSPropValue lpPropArray)  {
-    pval *pvalFuncName;
-    pval *pvalReturn;
-    pval *pvalArgs[1];
+    zval *pvalFuncName;
+    zval *pvalReturn;
+    zval *pvalArgs[1];
     HRESULT hr = hrSuccess;
     
     MAKE_STD_ZVAL(pvalFuncName);
@@ -265,9 +265,9 @@
 HRESULT ECImportHierarchyChangesProxy::ImportFolderDeletion(ULONG ulFlags, LPENTRYLIST lpSourceEntryList) {
     HRESULT hr = hrSuccess;
     
-    pval *pvalFuncName;
-    pval *pvalReturn;
-    pval *pvalArgs[2];
+    zval *pvalFuncName;
+    zval *pvalReturn;
+    zval *pvalArgs[2];
     
     MAKE_STD_ZVAL(pvalFuncName);
     MAKE_STD_ZVAL(pvalReturn);
